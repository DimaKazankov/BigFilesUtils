name: Quick Benchmark Report

permissions:
  contents: write

on:
  push:
    branches:
      - "*"
    paths-ignore:
      - 'README.md'
      - 'docs/**'
  workflow_dispatch:  # Allow manual triggering of the workflow

jobs:
  benchmark:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0

      # Cache for .NET packages
      - name: Cache .NET packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      # Setup .NET environment
      - name: Setup .NET
        uses: actions/setup-dotnet@v4.0.1
        with:
          dotnet-version: '8.0.402'

      # Restore .NET dependencies
      - name: Restore .NET dependencies
        run: dotnet restore

      # Build the project
      - name: Build the project
        run: dotnet build -c Release --no-restore

      # Run Tests
      - name: Run Tests
        run: dotnet test --no-build --verbosity normal -c Release

      # Publish the project
      - name: Publish
        run: |
          dotnet publish -c Release --verbosity normal -o ./publish/

      # Clean docs directory
      - name: Clean docs directory
        run: |
          rm -rf docs/*
          mkdir -p docs/
          
      - name: Run Benchmarks
        run: |
          dotnet "./publish/FileAlgorithms.Benchmark.dll" --filter "*FileGeneratorBenchmark*" --job short
          dotnet "./publish/FileAlgorithms.Benchmark.dll" --filter "*" --job short

      # Move benchmark results
      - name: Move benchmark results
        run: |
          find BenchmarkDotNet.Artifacts/results/* -type f | while IFS= read -r f; do
            if [[ "$f" == *-report-github.md || "$f" == *-barplot.png || "$f" == *-boxplot.png ]]; then
              mv "$f" docs/
            fi
          done
          rm -rf BenchmarkDotNet.Artifacts/

      # Update README.md with benchmark results
      - name: Update README.md
        run: |
          # Remove existing benchmark results from README.md
          sed -i '/<!-- BENCHMARK RESULTS START -->/,/<!-- BENCHMARK RESULTS END -->/d' README.md
          # Add new benchmark results to README.md
          echo '<!-- BENCHMARK RESULTS START -->' >> README.md
          echo '' >> README.md
          echo '## Benchmark Results' >> README.md
          echo '' >> README.md
          echo '*Last updated on '"$(date -u)"' UTC*' >> README.md
          echo '' >> README.md

          found=false
          for report in docs/*-report-github.md; do
            if [ -f "$report" ]; then
              echo "Including $report into README.md"
              cat "$report" >> README.md
              found=true
            fi
          done
          
          # If no files were found, print a message
          if [ "$found" = false ]; then
            echo "No benchmark markdown report found." >> README.md
          fi

          # Include the barplot image
          if ls docs/*-barplot.png 1> /dev/null 2>&1; then
            for img in docs/*-barplot.png; do
              echo "### Performance Barplot" >> README.md
              echo "![Benchmark Barplot]($img)" >> README.md
              echo '' >> README.md
            done
          else
            echo "No barplot image found." >> README.md
          fi

          # Include the boxplot image
          if ls docs/*-boxplot.png 1> /dev/null 2>&1; then
            for img in docs/*-boxplot.png; do
              echo "### Performance Boxplot" >> README.md
              echo "![Benchmark Boxplot]($img)" >> README.md
              echo '' >> README.md
            done
          else
            echo "No boxplot image found." >> README.md
          fi

          echo '<!-- BENCHMARK RESULTS END -->' >> README.md
        
        
        
        # Commit and push changes
      - name: Commit and push changes
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/* -f
          git add README.md
          git commit -m "Update benchmark results in README"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}